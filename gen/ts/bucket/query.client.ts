// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,long_type_string
// @generated from protobuf file "bucket/query.proto" (package "sonrio.sonr.bucket", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Query } from "./query";
import type { QueryAllWhereIsResponse } from "./query";
import type { QueryAllWhereIsRequest } from "./query";
import type { QueryGetWhereIsByCreatorResponse } from "./query";
import type { QueryGetWhereIsByCreatorRequest } from "./query";
import type { QueryGetWhereIsResponse } from "./query";
import type { QueryGetWhereIsRequest } from "./query";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { QueryParamsResponse } from "./query";
import type { QueryParamsRequest } from "./query";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Query defines the gRPC querier service.
 *
 * @generated from protobuf service sonrio.sonr.bucket.Query
 */
export interface IQueryClient {
    /**
     * Parameters queries the parameters of the module.
     *
     * @generated from protobuf rpc: Params(sonrio.sonr.bucket.QueryParamsRequest) returns (sonrio.sonr.bucket.QueryParamsResponse);
     */
    params(input: QueryParamsRequest, options?: RpcOptions): UnaryCall<QueryParamsRequest, QueryParamsResponse>;
    /**
     * Queries a WhereIs by did and creator.
     *
     * @generated from protobuf rpc: WhereIs(sonrio.sonr.bucket.QueryGetWhereIsRequest) returns (sonrio.sonr.bucket.QueryGetWhereIsResponse);
     */
    whereIs(input: QueryGetWhereIsRequest, options?: RpcOptions): UnaryCall<QueryGetWhereIsRequest, QueryGetWhereIsResponse>;
    /**
     * Queries all WhereIs by creator.
     *
     * @generated from protobuf rpc: WhereIsByCreator(sonrio.sonr.bucket.QueryGetWhereIsByCreatorRequest) returns (sonrio.sonr.bucket.QueryGetWhereIsByCreatorResponse);
     */
    whereIsByCreator(input: QueryGetWhereIsByCreatorRequest, options?: RpcOptions): UnaryCall<QueryGetWhereIsByCreatorRequest, QueryGetWhereIsByCreatorResponse>;
    /**
     * Queries a list of WhereIs items.
     *
     * @generated from protobuf rpc: WhereIsAll(sonrio.sonr.bucket.QueryAllWhereIsRequest) returns (sonrio.sonr.bucket.QueryAllWhereIsResponse);
     */
    whereIsAll(input: QueryAllWhereIsRequest, options?: RpcOptions): UnaryCall<QueryAllWhereIsRequest, QueryAllWhereIsResponse>;
}
/**
 * Query defines the gRPC querier service.
 *
 * @generated from protobuf service sonrio.sonr.bucket.Query
 */
export class QueryClient implements IQueryClient, ServiceInfo {
    typeName = Query.typeName;
    methods = Query.methods;
    options = Query.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Parameters queries the parameters of the module.
     *
     * @generated from protobuf rpc: Params(sonrio.sonr.bucket.QueryParamsRequest) returns (sonrio.sonr.bucket.QueryParamsResponse);
     */
    params(input: QueryParamsRequest, options?: RpcOptions): UnaryCall<QueryParamsRequest, QueryParamsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<QueryParamsRequest, QueryParamsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Queries a WhereIs by did and creator.
     *
     * @generated from protobuf rpc: WhereIs(sonrio.sonr.bucket.QueryGetWhereIsRequest) returns (sonrio.sonr.bucket.QueryGetWhereIsResponse);
     */
    whereIs(input: QueryGetWhereIsRequest, options?: RpcOptions): UnaryCall<QueryGetWhereIsRequest, QueryGetWhereIsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<QueryGetWhereIsRequest, QueryGetWhereIsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Queries all WhereIs by creator.
     *
     * @generated from protobuf rpc: WhereIsByCreator(sonrio.sonr.bucket.QueryGetWhereIsByCreatorRequest) returns (sonrio.sonr.bucket.QueryGetWhereIsByCreatorResponse);
     */
    whereIsByCreator(input: QueryGetWhereIsByCreatorRequest, options?: RpcOptions): UnaryCall<QueryGetWhereIsByCreatorRequest, QueryGetWhereIsByCreatorResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<QueryGetWhereIsByCreatorRequest, QueryGetWhereIsByCreatorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Queries a list of WhereIs items.
     *
     * @generated from protobuf rpc: WhereIsAll(sonrio.sonr.bucket.QueryAllWhereIsRequest) returns (sonrio.sonr.bucket.QueryAllWhereIsResponse);
     */
    whereIsAll(input: QueryAllWhereIsRequest, options?: RpcOptions): UnaryCall<QueryAllWhereIsRequest, QueryAllWhereIsResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<QueryAllWhereIsRequest, QueryAllWhereIsResponse>("unary", this._transport, method, opt, input);
    }
}
