// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,long_type_string
// @generated from protobuf file "bucket/query.proto" (package "sonrio.sonr.bucket", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { PageResponse } from "../cosmos/base/query/v1beta1/pagination";
import { PageRequest } from "../cosmos/base/query/v1beta1/pagination";
import { WhereIs } from "./where_is";
import { Params } from "./params";
/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from protobuf message sonrio.sonr.bucket.QueryParamsRequest
 */
export interface QueryParamsRequest {
}
/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from protobuf message sonrio.sonr.bucket.QueryParamsResponse
 */
export interface QueryParamsResponse {
    /**
     * params holds all the parameters of this module.
     *
     * @generated from protobuf field: sonrio.sonr.bucket.Params params = 1;
     */
    params?: Params;
}
/**
 * @generated from protobuf message sonrio.sonr.bucket.QueryGetWhereIsRequest
 */
export interface QueryGetWhereIsRequest {
    /**
     * @generated from protobuf field: string creator = 1;
     */
    creator: string;
    /**
     * @generated from protobuf field: string did = 2;
     */
    did: string;
}
/**
 * @generated from protobuf message sonrio.sonr.bucket.QueryGetWhereIsResponse
 */
export interface QueryGetWhereIsResponse {
    /**
     * @generated from protobuf field: sonrio.sonr.bucket.WhereIs where_is = 1;
     */
    whereIs?: WhereIs;
}
/**
 * @generated from protobuf message sonrio.sonr.bucket.QueryGetWhereIsByCreatorRequest
 */
export interface QueryGetWhereIsByCreatorRequest {
    /**
     * @generated from protobuf field: string creator = 1;
     */
    creator: string;
    /**
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * @generated from protobuf message sonrio.sonr.bucket.QueryGetWhereIsByCreatorResponse
 */
export interface QueryGetWhereIsByCreatorResponse {
    /**
     * @generated from protobuf field: repeated sonrio.sonr.bucket.WhereIs where_is = 1;
     */
    whereIs: WhereIs[];
    /**
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * @generated from protobuf message sonrio.sonr.bucket.QueryAllWhereIsRequest
 */
export interface QueryAllWhereIsRequest {
    /**
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
     */
    pagination?: PageRequest;
}
/**
 * @generated from protobuf message sonrio.sonr.bucket.QueryAllWhereIsResponse
 */
export interface QueryAllWhereIsResponse {
    /**
     * @generated from protobuf field: repeated sonrio.sonr.bucket.WhereIs where_is = 1;
     */
    whereIs: WhereIs[];
    /**
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
// @generated message type with reflection information, may provide speed optimized methods
class QueryParamsRequest$Type extends MessageType<QueryParamsRequest> {
    constructor() {
        super("sonrio.sonr.bucket.QueryParamsRequest", []);
    }
    create(value?: PartialMessage<QueryParamsRequest>): QueryParamsRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryParamsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsRequest): QueryParamsRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: QueryParamsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sonrio.sonr.bucket.QueryParamsRequest
 */
export const QueryParamsRequest = new QueryParamsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryParamsResponse$Type extends MessageType<QueryParamsResponse> {
    constructor() {
        super("sonrio.sonr.bucket.QueryParamsResponse", [
            { no: 1, name: "params", kind: "message", T: () => Params, options: { "gogoproto.nullable": false } }
        ]);
    }
    create(value?: PartialMessage<QueryParamsResponse>): QueryParamsResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryParamsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsResponse): QueryParamsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* sonrio.sonr.bucket.Params params */ 1:
                    message.params = Params.internalBinaryRead(reader, reader.uint32(), options, message.params);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryParamsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* sonrio.sonr.bucket.Params params = 1; */
        if (message.params)
            Params.internalBinaryWrite(message.params, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sonrio.sonr.bucket.QueryParamsResponse
 */
export const QueryParamsResponse = new QueryParamsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryGetWhereIsRequest$Type extends MessageType<QueryGetWhereIsRequest> {
    constructor() {
        super("sonrio.sonr.bucket.QueryGetWhereIsRequest", [
            { no: 1, name: "creator", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "did", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<QueryGetWhereIsRequest>): QueryGetWhereIsRequest {
        const message = { creator: "", did: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryGetWhereIsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGetWhereIsRequest): QueryGetWhereIsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string creator */ 1:
                    message.creator = reader.string();
                    break;
                case /* string did */ 2:
                    message.did = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryGetWhereIsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string creator = 1; */
        if (message.creator !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.creator);
        /* string did = 2; */
        if (message.did !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.did);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sonrio.sonr.bucket.QueryGetWhereIsRequest
 */
export const QueryGetWhereIsRequest = new QueryGetWhereIsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryGetWhereIsResponse$Type extends MessageType<QueryGetWhereIsResponse> {
    constructor() {
        super("sonrio.sonr.bucket.QueryGetWhereIsResponse", [
            { no: 1, name: "where_is", kind: "message", T: () => WhereIs, options: { "gogoproto.nullable": false } }
        ]);
    }
    create(value?: PartialMessage<QueryGetWhereIsResponse>): QueryGetWhereIsResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryGetWhereIsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGetWhereIsResponse): QueryGetWhereIsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* sonrio.sonr.bucket.WhereIs where_is */ 1:
                    message.whereIs = WhereIs.internalBinaryRead(reader, reader.uint32(), options, message.whereIs);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryGetWhereIsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* sonrio.sonr.bucket.WhereIs where_is = 1; */
        if (message.whereIs)
            WhereIs.internalBinaryWrite(message.whereIs, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sonrio.sonr.bucket.QueryGetWhereIsResponse
 */
export const QueryGetWhereIsResponse = new QueryGetWhereIsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryGetWhereIsByCreatorRequest$Type extends MessageType<QueryGetWhereIsByCreatorRequest> {
    constructor() {
        super("sonrio.sonr.bucket.QueryGetWhereIsByCreatorRequest", [
            { no: 1, name: "creator", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pagination", kind: "message", T: () => PageRequest }
        ]);
    }
    create(value?: PartialMessage<QueryGetWhereIsByCreatorRequest>): QueryGetWhereIsByCreatorRequest {
        const message = { creator: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryGetWhereIsByCreatorRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGetWhereIsByCreatorRequest): QueryGetWhereIsByCreatorRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string creator */ 1:
                    message.creator = reader.string();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 2:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryGetWhereIsByCreatorRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string creator = 1; */
        if (message.creator !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.creator);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 2; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sonrio.sonr.bucket.QueryGetWhereIsByCreatorRequest
 */
export const QueryGetWhereIsByCreatorRequest = new QueryGetWhereIsByCreatorRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryGetWhereIsByCreatorResponse$Type extends MessageType<QueryGetWhereIsByCreatorResponse> {
    constructor() {
        super("sonrio.sonr.bucket.QueryGetWhereIsByCreatorResponse", [
            { no: 1, name: "where_is", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => WhereIs, options: { "gogoproto.nullable": false } },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryGetWhereIsByCreatorResponse>): QueryGetWhereIsByCreatorResponse {
        const message = { whereIs: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryGetWhereIsByCreatorResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGetWhereIsByCreatorResponse): QueryGetWhereIsByCreatorResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated sonrio.sonr.bucket.WhereIs where_is */ 1:
                    message.whereIs.push(WhereIs.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryGetWhereIsByCreatorResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated sonrio.sonr.bucket.WhereIs where_is = 1; */
        for (let i = 0; i < message.whereIs.length; i++)
            WhereIs.internalBinaryWrite(message.whereIs[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sonrio.sonr.bucket.QueryGetWhereIsByCreatorResponse
 */
export const QueryGetWhereIsByCreatorResponse = new QueryGetWhereIsByCreatorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryAllWhereIsRequest$Type extends MessageType<QueryAllWhereIsRequest> {
    constructor() {
        super("sonrio.sonr.bucket.QueryAllWhereIsRequest", [
            { no: 1, name: "pagination", kind: "message", T: () => PageRequest }
        ]);
    }
    create(value?: PartialMessage<QueryAllWhereIsRequest>): QueryAllWhereIsRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryAllWhereIsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAllWhereIsRequest): QueryAllWhereIsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 1:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryAllWhereIsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.base.query.v1beta1.PageRequest pagination = 1; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sonrio.sonr.bucket.QueryAllWhereIsRequest
 */
export const QueryAllWhereIsRequest = new QueryAllWhereIsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryAllWhereIsResponse$Type extends MessageType<QueryAllWhereIsResponse> {
    constructor() {
        super("sonrio.sonr.bucket.QueryAllWhereIsResponse", [
            { no: 1, name: "where_is", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => WhereIs, options: { "gogoproto.nullable": false } },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryAllWhereIsResponse>): QueryAllWhereIsResponse {
        const message = { whereIs: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryAllWhereIsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAllWhereIsResponse): QueryAllWhereIsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated sonrio.sonr.bucket.WhereIs where_is */ 1:
                    message.whereIs.push(WhereIs.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryAllWhereIsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated sonrio.sonr.bucket.WhereIs where_is = 1; */
        for (let i = 0; i < message.whereIs.length; i++)
            WhereIs.internalBinaryWrite(message.whereIs[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sonrio.sonr.bucket.QueryAllWhereIsResponse
 */
export const QueryAllWhereIsResponse = new QueryAllWhereIsResponse$Type();
/**
 * @generated ServiceType for protobuf service sonrio.sonr.bucket.Query
 */
export const Query = new ServiceType("sonrio.sonr.bucket.Query", [
    { name: "Params", options: { "google.api.http": { get: "/sonr-io/sonr/bucket/params" } }, I: QueryParamsRequest, O: QueryParamsResponse },
    { name: "WhereIs", options: { "google.api.http": { get: "/sonr-io/sonr/bucket/where_is/{creator}/{did}" } }, I: QueryGetWhereIsRequest, O: QueryGetWhereIsResponse },
    { name: "WhereIsByCreator", options: { "google.api.http": { get: "/sonr-io/sonr/bucket/where_is/{creator}" } }, I: QueryGetWhereIsByCreatorRequest, O: QueryGetWhereIsByCreatorResponse },
    { name: "WhereIsAll", options: { "google.api.http": { get: "/sonr-io/sonr/bucket/where_is" } }, I: QueryAllWhereIsRequest, O: QueryAllWhereIsResponse }
]);
