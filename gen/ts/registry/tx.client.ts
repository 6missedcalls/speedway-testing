// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,long_type_string
// @generated from protobuf file "registry/tx.proto" (package "sonrio.sonr.registry", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Msg } from "./tx";
import type { MsgTransferAliasResponse } from "./tx";
import type { MsgTransferAlias } from "./tx";
import type { MsgSellAliasResponse } from "./tx";
import type { MsgSellAlias } from "./tx";
import type { MsgBuyAliasResponse } from "./tx";
import type { MsgBuyAlias } from "./tx";
import type { MsgDeactivateWhoIsResponse } from "./tx";
import type { MsgDeactivateWhoIs } from "./tx";
import type { MsgUpdateWhoIsResponse } from "./tx";
import type { MsgUpdateWhoIs } from "./tx";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { MsgCreateWhoIsResponse } from "./tx";
import type { MsgCreateWhoIs } from "./tx";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Msg defines the Msg service.
 *
 * @generated from protobuf service sonrio.sonr.registry.Msg
 */
export interface IMsgClient {
    /**
     * @generated from protobuf rpc: CreateWhoIs(sonrio.sonr.registry.MsgCreateWhoIs) returns (sonrio.sonr.registry.MsgCreateWhoIsResponse);
     */
    createWhoIs(input: MsgCreateWhoIs, options?: RpcOptions): UnaryCall<MsgCreateWhoIs, MsgCreateWhoIsResponse>;
    /**
     * @generated from protobuf rpc: UpdateWhoIs(sonrio.sonr.registry.MsgUpdateWhoIs) returns (sonrio.sonr.registry.MsgUpdateWhoIsResponse);
     */
    updateWhoIs(input: MsgUpdateWhoIs, options?: RpcOptions): UnaryCall<MsgUpdateWhoIs, MsgUpdateWhoIsResponse>;
    /**
     * @generated from protobuf rpc: DeactivateWhoIs(sonrio.sonr.registry.MsgDeactivateWhoIs) returns (sonrio.sonr.registry.MsgDeactivateWhoIsResponse);
     */
    deactivateWhoIs(input: MsgDeactivateWhoIs, options?: RpcOptions): UnaryCall<MsgDeactivateWhoIs, MsgDeactivateWhoIsResponse>;
    /**
     * @generated from protobuf rpc: BuyAlias(sonrio.sonr.registry.MsgBuyAlias) returns (sonrio.sonr.registry.MsgBuyAliasResponse);
     */
    buyAlias(input: MsgBuyAlias, options?: RpcOptions): UnaryCall<MsgBuyAlias, MsgBuyAliasResponse>;
    /**
     * @generated from protobuf rpc: SellAlias(sonrio.sonr.registry.MsgSellAlias) returns (sonrio.sonr.registry.MsgSellAliasResponse);
     */
    sellAlias(input: MsgSellAlias, options?: RpcOptions): UnaryCall<MsgSellAlias, MsgSellAliasResponse>;
    /**
     * this line is used by starport scaffolding # proto/tx/rpc
     *
     * @generated from protobuf rpc: TransferAlias(sonrio.sonr.registry.MsgTransferAlias) returns (sonrio.sonr.registry.MsgTransferAliasResponse);
     */
    transferAlias(input: MsgTransferAlias, options?: RpcOptions): UnaryCall<MsgTransferAlias, MsgTransferAliasResponse>;
}
/**
 * Msg defines the Msg service.
 *
 * @generated from protobuf service sonrio.sonr.registry.Msg
 */
export class MsgClient implements IMsgClient, ServiceInfo {
    typeName = Msg.typeName;
    methods = Msg.methods;
    options = Msg.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateWhoIs(sonrio.sonr.registry.MsgCreateWhoIs) returns (sonrio.sonr.registry.MsgCreateWhoIsResponse);
     */
    createWhoIs(input: MsgCreateWhoIs, options?: RpcOptions): UnaryCall<MsgCreateWhoIs, MsgCreateWhoIsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgCreateWhoIs, MsgCreateWhoIsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateWhoIs(sonrio.sonr.registry.MsgUpdateWhoIs) returns (sonrio.sonr.registry.MsgUpdateWhoIsResponse);
     */
    updateWhoIs(input: MsgUpdateWhoIs, options?: RpcOptions): UnaryCall<MsgUpdateWhoIs, MsgUpdateWhoIsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgUpdateWhoIs, MsgUpdateWhoIsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeactivateWhoIs(sonrio.sonr.registry.MsgDeactivateWhoIs) returns (sonrio.sonr.registry.MsgDeactivateWhoIsResponse);
     */
    deactivateWhoIs(input: MsgDeactivateWhoIs, options?: RpcOptions): UnaryCall<MsgDeactivateWhoIs, MsgDeactivateWhoIsResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgDeactivateWhoIs, MsgDeactivateWhoIsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: BuyAlias(sonrio.sonr.registry.MsgBuyAlias) returns (sonrio.sonr.registry.MsgBuyAliasResponse);
     */
    buyAlias(input: MsgBuyAlias, options?: RpcOptions): UnaryCall<MsgBuyAlias, MsgBuyAliasResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgBuyAlias, MsgBuyAliasResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SellAlias(sonrio.sonr.registry.MsgSellAlias) returns (sonrio.sonr.registry.MsgSellAliasResponse);
     */
    sellAlias(input: MsgSellAlias, options?: RpcOptions): UnaryCall<MsgSellAlias, MsgSellAliasResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgSellAlias, MsgSellAliasResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * this line is used by starport scaffolding # proto/tx/rpc
     *
     * @generated from protobuf rpc: TransferAlias(sonrio.sonr.registry.MsgTransferAlias) returns (sonrio.sonr.registry.MsgTransferAliasResponse);
     */
    transferAlias(input: MsgTransferAlias, options?: RpcOptions): UnaryCall<MsgTransferAlias, MsgTransferAliasResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgTransferAlias, MsgTransferAliasResponse>("unary", this._transport, method, opt, input);
    }
}
