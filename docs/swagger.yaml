basePath: /api/v1
definitions:
  did.Service:
    properties:
      id:
        $ref: '#/definitions/ssi.URI'
      serviceEndpoint:
        additionalProperties:
          type: string
        type: object
      type:
        type: string
    type: object
  object.Object:
    additionalProperties: true
    type: object
  query.PageResponse:
    properties:
      next_key:
        description: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently
        items:
          type: integer
        type: array
      total:
        description: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
        type: integer
    type: object
  routes.ConvertBucketRes:
    properties:
      content:
        $ref: '#/definitions/types.BucketContent'
      name:
        type: string
      schemaDid:
        type: string
      timestamp:
        type: integer
      uri:
        type: string
    type: object
  routes.CreateAccountResponse:
    properties:
      address:
        type: string
    type: object
  routes.CreateBucketResponse:
    properties:
      bucket:
        items:
          $ref: '#/definitions/types.BucketItem'
        type: array
      service:
        $ref: '#/definitions/did.Service'
    type: object
  routes.CreateSchemaResponse:
    properties:
      whatIs:
        $ref: '#/definitions/types.WhatIs'
    type: object
  routes.FailedLogin:
    properties:
      success:
        type: boolean
    type: object
  routes.FailedResponse:
    properties:
      error:
        type: string
    type: object
  routes.GetBucketResponse:
    properties:
      bucket:
        items:
          $ref: '#/definitions/routes.ConvertBucketRes'
        type: array
    type: object
  routes.GetObjectResponse:
    properties:
      object:
        $ref: '#/definitions/object.Object'
    type: object
  routes.QuerySchemaResponse:
    properties:
      definition:
        $ref: '#/definitions/types.SchemaDefinition'
    type: object
  routes.SuccessfulLogin:
    properties:
      address:
        type: string
      success:
        type: boolean
    type: object
  routes.uResponse:
    properties:
      address:
        type: string
      didDocument: {}
    type: object
  ssi.URI:
    properties:
      forceQuery:
        description: append a query ('?') even if RawQuery is empty
        type: boolean
      fragment:
        description: fragment for references, without '#'
        type: string
      host:
        description: host or host:port
        type: string
      opaque:
        description: encoded opaque data
        type: string
      path:
        description: path (relative paths may omit leading slash)
        type: string
      rawFragment:
        description: encoded fragment hint (see EscapedFragment method)
        type: string
      rawPath:
        description: encoded path hint (see EscapedPath method)
        type: string
      rawQuery:
        description: encoded query values, without '?'
        type: string
      scheme:
        type: string
      user:
        $ref: '#/definitions/url.Userinfo'
        description: username and password information
    type: object
  types.AclJwks:
    properties:
      encrypted_jwks:
        additionalProperties:
          items:
            type: integer
          type: array
        type: object
    type: object
  types.Alias:
    properties:
      amount:
        description: Amount is the amount listed for purchasing the Alias from the
          User/Application
        type: integer
      is_for_sale:
        description: IsForSale is the boolean value indicating if the Alias is for
          sale
        type: boolean
      name:
        description: Name is the string name of an Alias
        type: string
    type: object
  types.ArrayValue:
    properties:
      value:
        items:
          $ref: '#/definitions/types.SchemaDocumentValue'
        type: array
    type: object
  types.BoolValue:
    properties:
      value:
        type: boolean
    type: object
  types.BucketContent:
    properties:
      content_type:
        description: Type of the resource
        type: integer
      id:
        description: Content id a CID, DID, or unspecified
        type: string
      item:
        description: Raw content serialized to bytes
        items:
          type: integer
        type: array
    type: object
  types.BucketItem:
    properties:
      name:
        description: Name of the bucket item.
        type: string
      schema_did:
        description: |-
          References the schema and item within the bucket is associated with.
          Bucket items do not need to use the same schema if the bucket is "generic" // optional
        type: string
      timestamp:
        description: Timestamp of the last update. // optional
        type: integer
      type:
        description: Type of the resource
        type: integer
      uri:
        description: DID of the item. If applicable // optional
        type: string
    type: object
  types.BytesValue:
    properties:
      value:
        items:
          type: integer
        type: array
    type: object
  types.DIDDocument:
    properties:
      also_known_as:
        items:
          type: string
        type: array
      assertion_method:
        items:
          type: string
        type: array
      authentication:
        items:
          type: string
        type: array
      capability_delegation:
        items:
          type: string
        type: array
      capability_invocation:
        items:
          type: string
        type: array
      context:
        items:
          type: string
        type: array
      controller:
        items:
          type: string
        type: array
      id:
        type: string
      key_agreement:
        items:
          type: string
        type: array
      service:
        items:
          $ref: '#/definitions/types.Service'
        type: array
      verification_method:
        items:
          $ref: '#/definitions/types.VerificationMethod'
        type: array
    type: object
  types.FloatValue:
    properties:
      value:
        type: number
    type: object
  types.IntValue:
    properties:
      value:
        type: integer
    type: object
  types.KeyValuePair:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  types.LinkValue:
    properties:
      link:
        description: Optional field for a link context if `SchemaKind` is of type
          `Link`
        type: integer
      value:
        type: string
    type: object
  types.MsgBuyAliasResponse:
    properties:
      success:
        description: Did is the top level DID of the WhoIs.
        type: boolean
      who_is:
        $ref: '#/definitions/types.WhoIs'
        description: WhoIs is the updated WhoIs, contains the DID document and associated
          metadata.
    type: object
  types.MsgSellAliasResponse:
    properties:
      success:
        description: Success is true if the Alias was successfully transferred.
        type: boolean
      who_is:
        $ref: '#/definitions/types.WhoIs'
        description: WhoIs is the updated WhoIs, contains the DID document and associated
          metadata.
    type: object
  types.MsgTransferAliasResponse:
    properties:
      success:
        description: Success is true if the Alias was successfully transferred.
        type: boolean
      who_is:
        $ref: '#/definitions/types.WhoIs'
        description: WhoIs is the updated WhoIs, contains the DID document and associated
          metadata.
    type: object
  types.SchemaDefinition:
    properties:
      creator:
        type: string
      did:
        description: the DID for this schema should not be populated by request
        type: string
      fields:
        description: the properties of this schema
        items:
          $ref: '#/definitions/types.SchemaKindDefinition'
        type: array
      label:
        description: an alternative reference point
        type: string
    type: object
  types.SchemaDocument:
    properties:
      cid:
        type: string
      creator:
        type: string
      definition:
        $ref: '#/definitions/types.SchemaDefinition'
        description: The definition of the document used to build the values
      did:
        description: the DID for this schema should not be populated by request
        type: string
      fields:
        description: the properties of this schemadocument
        items:
          $ref: '#/definitions/types.SchemaDocumentValue'
        type: array
    type: object
  types.SchemaDocumentValue:
    properties:
      array_value:
        $ref: '#/definitions/types.ArrayValue'
      bool_value:
        $ref: '#/definitions/types.BoolValue'
        description: The value of the field
      bytes_value:
        $ref: '#/definitions/types.BytesValue'
      field:
        description: Type of a single schema property
        type: integer
      float_value:
        $ref: '#/definitions/types.FloatValue'
      int_value:
        $ref: '#/definitions/types.IntValue'
      link_value:
        $ref: '#/definitions/types.LinkValue'
      name:
        type: string
      string_value:
        $ref: '#/definitions/types.StringValue'
    type: object
  types.SchemaKindDefinition:
    properties:
      field:
        description: Type of a single schema property
        type: integer
      link:
        type: string
      link_kind:
        description: Optional field for a link context if `SchemaKind` is of type
          `Link`
        type: integer
      name:
        type: string
    type: object
  types.Service:
    properties:
      id:
        type: string
      service_endpoint:
        items:
          $ref: '#/definitions/types.KeyValuePair'
        type: array
      type:
        type: string
    type: object
  types.StringValue:
    properties:
      value:
        type: string
    type: object
  types.VerificationMethod:
    properties:
      controller:
        type: string
      credential_json:
        items:
          type: integer
        type: array
      id:
        type: string
      public_key_base58:
        type: string
      public_key_jwk:
        items:
          $ref: '#/definitions/types.KeyValuePair'
        type: array
      type:
        type: string
    type: object
  types.WhatIs:
    properties:
      creator:
        description: Creator is the DID of the creator
        type: string
      did:
        description: DID is the DID of the object
        type: string
      is_active:
        description: IsActive is the status of the DID Document
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a map of key-value pairs that can be used to store
          additional information about the WhatIs (Schema)
        type: object
      schema:
        $ref: '#/definitions/types.SchemaDefinition'
        description: Object_doc is the object document
      timestamp:
        description: Timestamp is the time of the last update of the DID Document
        type: integer
    type: object
  types.WhereIs:
    properties:
      content:
        description: Content of the new bucket map of DIDs to CIDs.
        items:
          $ref: '#/definitions/types.BucketItem'
        type: array
      content_acl:
        additionalProperties:
          $ref: '#/definitions/types.AclJwks'
        description: JWKs of the new bucket.
        type: object
      creator:
        description: Creator of the new bucket
        type: string
      did:
        description: DID of the created bucket.
        type: string
      is_active:
        description: IsActive flag of the new bucket.
        type: boolean
      label:
        description: Label of the new bucket.
        type: string
      role:
        description: Role of the creator of the new bucket.
        type: integer
      timestamp:
        description: Timestamp of the new bucket.
        type: integer
      visibility:
        description: Visibility of the new bucket.
        type: integer
    type: object
  types.WhoIs:
    properties:
      alias:
        description: Alias is the list of registered `alsoKnownAs` identifiers of
          the User or Application
        items:
          $ref: '#/definitions/types.Alias'
        type: array
      controllers:
        description: Credentials are the biometric info of the registered name and
          account encoded with public key
        items:
          type: string
        type: array
      did_document:
        $ref: '#/definitions/types.DIDDocument'
        description: DIDDocument is the bytes representation of DIDDocument within
          the WhoIs. Initially marshalled as JSON.
      is_active:
        description: IsActive is the status of the DID Document
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a map of key-value pairs that can be used to store
          additional information about the DID Document
        type: object
      owner:
        description: Owner is the top level DID of the User or Application derived
          from the multisignature wallet.
        type: string
      timestamp:
        description: Timestamp is the time of the last update of the DID Document
        type: integer
      type:
        description: 'Type is the kind of the entity. Possible values are: "user",
          "application"'
        type: integer
    type: object
  url.Userinfo:
    type: object
  v1.GetDocumentResponse:
    properties:
      cid:
        type: string
      did:
        type: string
      document:
        $ref: '#/definitions/types.SchemaDocument'
      status:
        type: integer
    type: object
  v1.ObjectReference:
    properties:
      cid:
        type: string
      did:
        type: string
      label:
        type: string
    type: object
  v1.QueryWhatIsByCreatorResponse:
    properties:
      code:
        type: integer
      pagination:
        $ref: '#/definitions/query.PageResponse'
      schemas:
        additionalProperties:
          $ref: '#/definitions/types.SchemaDefinition'
        type: object
      what_is:
        items:
          $ref: '#/definitions/types.WhatIs'
        type: array
    type: object
  v1.QueryWhereIsByCreatorResponse:
    properties:
      code:
        type: integer
      pagination:
        $ref: '#/definitions/query.PageResponse'
      where_is:
        items:
          $ref: '#/definitions/types.WhereIs'
        type: array
    type: object
  v1.SearchBucketContentBySchemaResponse:
    properties:
      bucket_did:
        type: string
      content:
        items:
          items:
            type: integer
          type: array
        type: array
      schema_did:
        type: string
      status:
        type: integer
    type: object
  v1.UploadDocumentResponse:
    properties:
      cid:
        type: string
      did:
        type: string
      document:
        $ref: '#/definitions/types.SchemaDocument'
      status:
        type: integer
    type: object
  v1.UploadObjectResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      reference:
        $ref: '#/definitions/v1.ObjectReference'
    type: object
host: localhost:8080
info:
  contact:
    email: team@sonr.io
    name: API Support
    url: https://sonr.io/
  description: Create accounts, schemas, buckets and objects in a scalable way utilizing
    the Sonr architecture.
  license:
    name: OpenGLv3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  termsOfService: https://sonr.io/terms
  title: Speedway API
  version: "2.0"
paths:
  /account/create:
    post:
      consumes:
      - application/json
      description: Create a new account on Sonr using the Registry module of Sonr's
        Blockchain.
      parameters:
      - description: password
        example: '"Password"'
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.CreateAccountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: CreateAccount
      tags:
      - Account
  /account/info:
    get:
      consumes:
      - application/json
      description: Get Account information from the Sonr Blockchain. This is a read-only
        endpoint.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.uResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: GetAccount
      tags:
      - Account
  /account/login:
    post:
      consumes:
      - application/json
      description: Login to an existing account on Sonr using the Registry module
        of Sonr's Blockchain.
      parameters:
      - description: did
        example: '"snr172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: Did
        required: true
        schema:
          type: string
      - description: password
        example: '"Password"'
        in: body
        name: Password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.SuccessfulLogin'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedLogin'
      summary: LoginAccount
      tags:
      - Account
  /alias/buy:
    post:
      consumes:
      - application/json
      description: Buy an alias
      parameters:
      - description: Creator
        in: body
        name: creator
        required: true
        schema:
          type: string
      - description: Alias
        in: body
        name: alias
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgBuyAliasResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: BuyAlias
      tags:
      - Alias
  /alias/sell:
    post:
      consumes:
      - application/json
      description: Sell an alias
      parameters:
      - description: Creator
        in: body
        name: creator
        required: true
        schema:
          type: string
      - description: Alias
        in: body
        name: alias
        required: true
        schema:
          type: string
      - description: Amount
        in: body
        name: amount
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgSellAliasResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: SellAlias
      tags:
      - Alias
  /alias/transfer:
    post:
      consumes:
      - application/json
      description: Transfer an alias
      parameters:
      - description: Creator
        in: body
        name: creator
        required: true
        schema:
          type: string
      - description: Alias
        in: body
        name: alias
        required: true
        schema:
          type: string
      - description: Recipient
        in: body
        name: recipient
        required: true
        schema:
          type: string
      - description: Amount
        in: body
        name: amount
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.MsgTransferAliasResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: TransferAlias
      tags:
      - Alias
  /bucket/create:
    post:
      consumes:
      - application/json
      description: Create a bucket on Sonr using the bucket module of Sonr's Blockchain.
      parameters:
      - description: creator
        example: '"snr172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: Creator
        required: true
        schema:
          type: string
      - description: label
        example: '"My Bucket"'
        in: body
        name: Label
        required: true
        schema:
          type: string
      - description: visibility
        example: '"public" or "private"'
        in: body
        name: Visibility
        required: true
        schema:
          type: string
      - description: role
        example: '"application" or "user"'
        in: body
        name: Role
        required: true
        schema:
          type: string
      - description: content
        example: '"name: My Bucket, uri: bafyreifqum26tv4wprgri5t4ddef7tozknnicuayjcvd4m5gag5avgtvsa"'
        in: body
        name: Content
        required: true
        schema:
          type: string
      - description: ResourceIdentifier
        example: '"did" or "cid"'
        in: body
        name: ResourceIdentifier
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.CreateBucketResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: CreateBucket
      tags:
      - Bucket
  /bucket/get:
    post:
      consumes:
      - application/json
      description: Get a bucket on Sonr using the bucket module of Sonr's Blockchain.
      parameters:
      - description: BucketDid
        example: '"did:snr:172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: bucketDid
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.GetBucketResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: GetBucket
      tags:
      - Bucket
  /bucket/get-by-schema:
    post:
      consumes:
      - application/json
      description: Get a bucket on Sonr using a Schema.
      parameters:
      - description: Creator
        example: '"snr172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: Creator
        required: true
        schema:
          type: string
      - description: bucketDid
        example: '"did:snr:172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: BucketDid
        required: true
        schema:
          type: string
      - description: schemaDid
        example: '"did:snr:172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: SchemaDid
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.SearchBucketContentBySchemaResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: GetBucketBySchema
      tags:
      - Bucket
  /bucket/get-from-creator:
    post:
      description: Query the Sonr Blockchain for all public buckets by a specified
        creator.
      parameters:
      - description: snr...
        in: query
        name: creator
        type: string
      - description: pagination
        in: query
        name: pagination
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.QueryWhereIsByCreatorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: QueryWhereIsByCreator
      tags:
      - Bucket
  /bucket/update-items:
    post:
      description: Update a bucket on Sonr using the bucket module of Sonr's Blockchain.
      parameters:
      - description: BucketDid
        example: '"did:snr:172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: bucketDid
        required: true
        schema:
          type: string
      - description: Content
        example: '"name: My Bucket, uri: bafyreifqum26tv4wprgri5t4ddef7tozknnicuayjcvd4m5gag5avgtvsa"'
        in: body
        name: Content
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.BucketItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: UpdateBucketItems
      tags:
      - Bucket
  /bucket/update-label:
    post:
      description: Update a bucket on Sonr using the bucket module of Sonr's Blockchain.
      parameters:
      - description: BucketDid
        example: '"did:snr:172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: bucketDid
        required: true
        schema:
          type: string
      - description: Label
        example: '"My Bucket"'
        in: body
        name: label
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: UpdateBucketLabel
      tags:
      - Bucket
  /bucket/update-visibility:
    post:
      description: Update a bucket on Sonr using the bucket module of Sonr's Blockchain.
      parameters:
      - description: BucketDid
        example: '"did:snr:172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: bucketDid
        required: true
        schema:
          type: string
      - description: Visibility
        example: '"public"'
        in: body
        name: visibility
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: UpdateBucketVisibility
      tags:
      - Bucket
  /object/build:
    post:
      consumes:
      - application/json
      description: Build an object on Sonr using the object module of Sonr's Blockchain.
      parameters:
      - description: schemaDid
        example: '"did:sonr:172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: SchemaDid
        required: true
        schema:
          type: string
      - description: label
        example: '"MyObject"'
        in: body
        name: Label
        required: true
        schema:
          type: string
      - description: object
        in: body
        name: Object
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.UploadObjectResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: BuildObject
      tags:
      - Object
  /object/get:
    post:
      consumes:
      - application/json
      description: Get an object on Sonr using the object module of Sonr's Blockchain.
      parameters:
      - description: SchemaDid
        example: '"did:sonr:172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: SchemaDid
        required: true
        schema:
          type: string
      - description: ObjectCid
        example: '"bafyreigfzxrtvfzuaoyhn5vgndneeeirq62efgf2s3igmoenxgx7jxy2cm"'
        in: body
        name: ObjectCid
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.GetObjectResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: GetObject
      tags:
      - Object
  /schema-document/create:
    post:
      consumes:
      - application/json
      description: Create a new schema document on Sonr using the Registry module
        of Sonr's Blockchain.
      parameters:
      - description: creator
        example: '"did:sonr:0x1234"'
        in: body
        name: creator
        required: true
        schema:
          type: string
      - description: label
        example: '"My Schema"'
        in: body
        name: label
        required: true
        schema:
          type: string
      - description: schema_did
        example: '"did:sonr:0x1234"'
        in: body
        name: schema_did
        required: true
        schema:
          type: string
      - description: fields
        example: '"did:sonr:0x1234"'
        in: body
        name: fields
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.UploadDocumentResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: CreateSchemaDocument
      tags:
      - Schema Document
  /schema-document/get:
    post:
      consumes:
      - application/json
      description: Get a schema document utilizing motor client. Returns the schema
        document.
      parameters:
      - description: Cid of the schema
        in: query
        name: cid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetDocumentResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: GetSchemaDocument
      tags:
      - Schema Document
  /schema/create:
    post:
      consumes:
      - application/json
      description: Create a schema utilizing motor client. Returns the WhatIs of the
        schema created.
      parameters:
      - description: Label of the schema
        in: query
        name: label
        required: true
        type: string
      - description: Fields of the schema
        in: query
        name: fields
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.CreateSchemaResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: CreateSchema
      tags:
      - Schema
  /schema/get:
    post:
      consumes:
      - application/json
      description: Get a schema utilizing motor client. Returns the WhatIs of the
        schema that is retrieved.
      parameters:
      - description: Creator
        in: body
        name: creator
        required: true
        schema:
          type: string
      - description: Schema
        in: body
        name: schema
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.QuerySchemaResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: GetSchema
      tags:
      - Schema
  /schema/get-from-creator:
    post:
      description: Query the Sonr Blockchain for all public schemas on the Blockchain.
        This is a read-only endpoint.
      parameters:
      - description: did:snr:...
        in: query
        name: creator
        type: string
      - description: pagination
        in: query
        name: pagination
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.QueryWhatIsByCreatorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.FailedResponse'
      summary: QueryWhatIsByCreator
      tags:
      - Schema
swagger: "2.0"
