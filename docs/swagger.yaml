basePath: /api/v1
definitions:
  github.com_sonr-io_speedway_server_routes.CreateBucketRequest:
    properties:
      content:
        additionalProperties:
          type: string
        description: Content of the bucket
        type: object
      creator:
        description: Creator of the bucket
        type: string
      label:
        description: Label of the bucket
        type: string
      role:
        description: Role of the bucket
        type: string
      visibility:
        description: Visibility of the bucket
        type: string
    type: object
  github.com_sonr-io_speedway_server_routes.UpdateBucketRequest:
    properties:
      content:
        additionalProperties:
          type: string
        type: object
      did:
        type: string
      resourceId:
        type: integer
    type: object
  github.com_sonr-io_speedway_server_routes.uResponse:
    properties:
      address:
        type: string
      didDocument: {}
    type: object
  motor.CreateSchemaResponse:
    properties:
      status:
        type: integer
      what_is:
        $ref: '#/definitions/types.WhatIs'
    type: object
  motor.LoginResponse:
    properties:
      success:
        type: boolean
      who_is:
        $ref: '#/definitions/types.WhoIs'
    type: object
  object.ObjectReference:
    properties:
      cid:
        type: string
      did:
        type: string
      label:
        type: string
    type: object
  server_routes.CreateBucketRequest:
    properties:
      content:
        additionalProperties:
          type: string
        description: Content of the bucket
        type: object
      creator:
        description: Creator of the bucket
        type: string
      label:
        description: Label of the bucket
        type: string
      role:
        description: Role of the bucket
        type: string
      visibility:
        description: Visibility of the bucket
        type: string
    type: object
  server_routes.UpdateBucketRequest:
    properties:
      content:
        additionalProperties:
          type: string
        type: object
      did:
        type: string
      resourceId:
        type: integer
    type: object
  server_routes.uResponse:
    properties:
      address:
        type: string
      didDocument: {}
    type: object
  types.Alias:
    properties:
      amount:
        description: Amount is the amount listed for purchasing the Alias from the
          User/Application
        type: integer
      is_for_sale:
        description: IsForSale is the boolean value indicating if the Alias is for
          sale
        type: boolean
      name:
        description: Name is the string name of an Alias
        type: string
    type: object
  types.DIDDocument:
    properties:
      also_known_as:
        items:
          type: string
        type: array
      assertion_method:
        items:
          type: string
        type: array
      authentication:
        items:
          type: string
        type: array
      capability_delegation:
        items:
          type: string
        type: array
      capability_invocation:
        items:
          type: string
        type: array
      context:
        items:
          type: string
        type: array
      controller:
        items:
          type: string
        type: array
      id:
        type: string
      key_agreement:
        items:
          type: string
        type: array
      service:
        items:
          $ref: '#/definitions/types.Service'
        type: array
      verification_method:
        items:
          $ref: '#/definitions/types.VerificationMethod'
        type: array
    type: object
  types.KeyValuePair:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  types.SchemaDefinition:
    properties:
      creator:
        description: |-
          Represents the types of fields a schema can have
          the DID for this schema
        type: string
      fields:
        description: the properties of this schema
        items:
          $ref: '#/definitions/types.SchemaKindDefinition'
        type: array
      label:
        description: an alternative reference point
        type: string
    type: object
  types.SchemaKindDefinition:
    properties:
      field:
        description: Type of a single schema property
        type: integer
      link:
        type: string
      link_kind:
        description: Optional field for a link context if `SchemaKind` is of type
          `Link`
        type: integer
      name:
        type: string
    type: object
  types.SchemaReference:
    properties:
      cid:
        description: a reference to information stored within an IPFS node.
        type: string
      did:
        description: the DID for this schema
        type: string
      label:
        description: an alternative reference point
        type: string
    type: object
  types.Service:
    properties:
      id:
        type: string
      service_endpoint:
        items:
          $ref: '#/definitions/types.KeyValuePair'
        type: array
      type:
        type: string
    type: object
  types.VerificationMethod:
    properties:
      controller:
        type: string
      credential_json:
        items:
          type: integer
        type: array
      id:
        type: string
      public_key_base58:
        type: string
      public_key_jwk:
        items:
          $ref: '#/definitions/types.KeyValuePair'
        type: array
      type:
        type: string
    type: object
  types.WhatIs:
    properties:
      creator:
        description: Creator is the DID of the creator
        type: string
      did:
        description: DID is the DID of the object
        type: string
      is_active:
        description: IsActive is the status of the DID Document
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a map of key-value pairs that can be used to store
          additional information about the WhatIs (Schema)
        type: object
      schema:
        $ref: '#/definitions/types.SchemaReference'
        description: Object_doc is the object document
      timestamp:
        description: Timestamp is the time of the last update of the DID Document
        type: integer
    type: object
  types.WhoIs:
    properties:
      alias:
        description: Alias is the list of registered `alsoKnownAs` identifiers of
          the User or Application
        items:
          $ref: '#/definitions/types.Alias'
        type: array
      controllers:
        description: Credentials are the biometric info of the registered name and
          account encoded with public key
        items:
          type: string
        type: array
      did_document:
        $ref: '#/definitions/types.DIDDocument'
        description: DIDDocument is the bytes representation of DIDDocument within
          the WhoIs. Initially marshalled as JSON.
      is_active:
        description: IsActive is the status of the DID Document
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a map of key-value pairs that can be used to store
          additional information about the DID Document
        type: object
      owner:
        description: Owner is the top level DID of the User or Application derived
          from the multisignature wallet.
        type: string
      timestamp:
        description: Timestamp is the time of the last update of the DID Document
        type: integer
      type:
        description: 'Type is the kind of the entity. Possible values are: "user",
          "application"'
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: team@sonr.io
    name: API Support
    url: https://sonr.io/
  description: Create accounts, schemas, buckets and objects in a scalable way utilizing
    the Sonr architecture.
  license:
    name: OpenGLv3
  termsOfService: https://sonr.io/terms
  title: Speedway API
  version: "2.0"
paths:
  /account/create:
    post:
      description: Create a new account on Sonr using the Registry module of Sonr's
        Blockchain.
      parameters:
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Address
          schema:
            type: string
        "500":
          description: Error
          schema:
            type: string
      summary: CreateAccount
      tags:
      - account
  /account/info:
    get:
      description: Get Account information from the Sonr Blockchain. This is a read-only
        endpoint.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_sonr-io_speedway_server_routes.uResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetAccount
      tags:
      - object
  /account/login:
    post:
      description: Login to an existing account on Sonr using the Registry module
        of Sonr's Blockchain.
      parameters:
      - description: Did
        example: '"snr172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: Did
        required: true
        schema:
          type: string
      - description: Password
        example: '"Password"'
        in: body
        name: Password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/motor.LoginResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: LoginAccount
      tags:
      - account
  /bucket/create:
    post:
      description: Create a bucket on Sonr using the object module of Sonr's Blockchain.
      parameters:
      - description: UpdateBucketRequest
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github.com_sonr-io_speedway_server_routes.UpdateBucketRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: UpdateBucket
      tags:
      - bucket
  /bucket/get:
    post:
      description: Get a bucket on Sonr using the object module of Sonr's Blockchain.
      parameters:
      - description: BucketDid
        example: '"did:sonr:172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: bucketDid
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetBucket
      tags:
      - bucket
  /object/build:
    post:
      description: Build an object on Sonr using the object module of Sonr's Blockchain.
      parameters:
      - description: SchemaDid
        example: '"did:sonr:172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: SchemaDid
        required: true
        schema:
          type: string
      - description: Label
        example: '"MyObject"'
        in: body
        name: Label
        required: true
        schema:
          type: string
      - description: Object
        in: body
        name: Object
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/object.ObjectReference'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: BuildObject
      tags:
      - object
  /object/get:
    post:
      description: Get an object on Sonr using the object module of Sonr's Blockchain.
      parameters:
      - description: SchemaDid
        example: '"did:sonr:172ljvam8m7xxlv59v6w27lula58zwwct3vgn9p"'
        in: body
        name: SchemaDid
        required: true
        schema:
          type: string
      - description: ObjectCid
        example: '"bafyreigfzxrtvfzuaoyhn5vgndneeeirq62efgf2s3igmoenxgx7jxy2cm"'
        in: body
        name: ObjectCid
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/object.ObjectReference'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetObject
      tags:
      - object
  /schema/create:
    post:
      description: Create a schema utilizing motor client. Returns the WhatIs of the
        schema created.
      parameters:
      - description: Label of the schema
        in: query
        name: label
        required: true
        type: string
      - description: Fields of the schema
        in: query
        name: fields
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/motor.CreateSchemaResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: CreateSchema
      tags:
      - schema
  /schema/get:
    post:
      description: Get a schema utilizing motor client. Returns the WhatIs of the
        schema that is retrieved.
      parameters:
      - description: Creator
        in: query
        name: creator
        required: true
        type: string
      - description: Schema
        in: query
        name: schema
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.SchemaDefinition'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GetSchema
      tags:
      - schema
swagger: "2.0"
